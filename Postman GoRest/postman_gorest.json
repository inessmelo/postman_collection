{
	"info": {
		"_postman_id": "821f3c61-fe81-4513-a032-d79a32a55237",
		"name": "GO Rest",
		"description": "Swagger: [https://gorest.co.in/#google_vignette](https://gorest.co.in/#google_vignette)\n\nObter TOKEN: [https://gorest.co.in/my-account/access-tokens](https://gorest.co.in/my-account/access-tokens)\n\nAPI para cadastro de usuários, Post e comentarios - Rede social",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Usuarios",
			"item": [
				{
					"name": "Cadastrar usuário",
					"item": [
						{
							"name": "[CT001]Cadastro de usuário com sucesso",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b061b66e-8955-4208-a7a5-b5dd7061c369",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "32dee309-33fb-44da-a003-e17c185fe0cc",
										"exec": [
											"//STATUS CODE DE SUCESSO\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"//STATUS DE CRIADO COM SUCESSO\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"//RETORNA CAMPOS\r",
											"pm.test(\"Exibe campos no retorno\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"id\");\r",
											"    pm.expect(pm.response.text()).to.include(\"name\");\r",
											"    pm.expect(pm.response.text()).to.include(\"gender\");\r",
											"    pm.expect(pm.response.text()).to.include(\"status\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "9bc04c21-df56-465b-9d3a-57351d01432a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_gorest}}/users"
							},
							"response": []
						},
						{
							"name": "[CT002]Validar campos obrigatorios",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb4bca14-c48d-4d2c-833f-d367a54fb6be",
										"exec": [
											"//STATUS CODE DE SUCESSO\r",
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"//STATUS DE CRIADO COM SUCESSO\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unprocessable Entity\");\r",
											"});\r",
											"\r",
											"//RETORNA MSG DE ERRO\r",
											"pm.test(\"Retorna msg de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"can't be blank\");\r",
											"    pm.expect(pm.response.text()).to.include(\"can't be blank, can be male of female\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "52487239-a1f5-4e57-8539-58615d0f2451",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"gender\": \"\",\r\n    \"email\": \"\",\r\n    \"status\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_gorest}}/users"
							},
							"response": []
						},
						{
							"name": "[CT003]Validar obrigatoriedade do campo nome",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5b5d6e7-082f-41e1-a479-f42f0d0a3609",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f0a13344-52ca-4401-b441-05a072c9756f",
										"exec": [
											"//STATUS CODE DE SUCESSO\r",
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"//STATUS DE CRIADO COM SUCESSO\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unprocessable Entity\");\r",
											"});\r",
											"\r",
											"//RETORNA MSG DE ERRO\r",
											"pm.test(\"Retorna msg de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"can't be blank\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "a60d52cc-ea11-4e83-aaed-e654b2026526",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_gorest}}/users"
							},
							"response": []
						},
						{
							"name": "[CT004]Validar obrigatoriedade do campo Genero",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5b5d6e7-082f-41e1-a479-f42f0d0a3609",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f0a13344-52ca-4401-b441-05a072c9756f",
										"exec": [
											"//STATUS CODE DE SUCESSO\r",
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"//STATUS DE CRIADO COM SUCESSO\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unprocessable Entity\");\r",
											"});\r",
											"\r",
											"//RETORNA MSG DE ERRO\r",
											"pm.test(\"Retorna msg de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"can't be blank, can be male of female\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b4956039-ce05-4fb0-acf0-64d33fa5af58",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"\",\r\n    \"email\": \"{{email}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_gorest}}/users"
							},
							"response": []
						},
						{
							"name": "[CT005]Validar obrigatoriedade do campo Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5b5d6e7-082f-41e1-a479-f42f0d0a3609",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f0a13344-52ca-4401-b441-05a072c9756f",
										"exec": [
											"//STATUS CODE DE SUCESSO\r",
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"//STATUS DE CRIADO COM SUCESSO\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unprocessable Entity\");\r",
											"});\r",
											"\r",
											"//RETORNA MSG DE ERRO\r",
											"pm.test(\"Retorna msg de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"can't be blank\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "b56195bd-d24b-4af4-a278-9f84f9cc6aa9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"\",\r\n    \"status\": \"{{status}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_gorest}}/users"
							},
							"response": []
						},
						{
							"name": "[CT006]Validar obrigatoriedade do campo Status",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5b5d6e7-082f-41e1-a479-f42f0d0a3609",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f0a13344-52ca-4401-b441-05a072c9756f",
										"exec": [
											"//STATUS CODE DE SUCESSO\r",
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											"\r",
											"//STATUS DE CRIADO COM SUCESSO\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Unprocessable Entity\");\r",
											"});\r",
											"\r",
											"//RETORNA MSG DE ERRO\r",
											"pm.test(\"Retorna msg de erro\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"can't be blank\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "e97be672-e9d6-42c0-9416-99ce67affd3b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"status\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_gorest}}/users"
							},
							"response": []
						}
					],
					"id": "6fa4dbad-d7e8-4c25-9d17-8e88507ec0fe",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "15b16e2d-5de6-435b-85f1-146059b690f3",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"//=================NAME=================\r",
									"// Lista de nomes aleatórios\r",
									"const names = [\"Lucas\", \"Ana\", \"Carlos\", \"Mariana\", \"João\", \"Isabela\", \"Pedro\", \"Lívia\", \"Felipe\", \"Rafaela\"];\r",
									"\r",
									"// Função para escolher um nome aleatório da lista\r",
									"function getRandomName() {\r",
									"    const index = Math.floor(Math.random() * names.length);\r",
									"    return names[index];\r",
									"}\r",
									"\r",
									"// Define a variável 'name' no ambiente\r",
									"pm.environment.set(\"name\", getRandomName());\r",
									"\r",
									"\r",
									"\r",
									"//=================EMAIL=================\r",
									"const domains = [\"example.com\", \"mail.com\", \"test.com\", \"fakeemail.com\"];\r",
									"\r",
									"// Função para gerar email aleatório com nome + número + domínio\r",
									"function getRandomEmail(name) {\r",
									"    const randomNum = Math.floor(Math.random() * 1000); // número de 0 a 999\r",
									"    const domain = domains[Math.floor(Math.random() * domains.length)];\r",
									"    return `${name.toLowerCase()}${randomNum}@${domain}`;\r",
									"}\r",
									"\r",
									"// Gerar e armazenar as variáveis\r",
									"const name = getRandomName();\r",
									"const email = getRandomEmail(name);\r",
									"\r",
									"pm.environment.set(\"name\", name);\r",
									"pm.environment.set(\"email\", email);\r",
									"\r",
									"\r",
									"\r",
									"//=================STATUS=================\r",
									"//RETONAR ACTIVE OU INACTIVE NO CAMPO STATUS\r",
									"function randomBoolean() {\r",
									"    return Math.random() < 0.5;\r",
									"}\r",
									"let status = randomBoolean() ? \"active\" : \"inactive\";\r",
									"pm.environment.set(\"status\", status);\r",
									"\r",
									"\r",
									"\r",
									"//=================GENDER=================\r",
									"//RETONAR MALE OU FEMALE NO CAMPO GENDER\r",
									"function randomBoolean() {\r",
									"    return Math.random() < 0.5;\r",
									"}\r",
									"let gender = randomBoolean() ? \"male\" : \"female\";\r",
									"pm.environment.set(\"gender\", gender);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "be9e5a72-9a0f-412d-8871-494665b0a1f4",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"//TEMPO DE RESPOSTA\r",
									"pm.test(\"Response time is less than 2seg\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "Visualisar usuário",
					"item": [
						{
							"name": "[CT001]Buscar todos usuários",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47537ab5-7c74-4ff9-a397-72cdd23ea3bf",
										"exec": [
											"\r",
											"//RETORNA NOME\r",
											"pm.test(\"Retorna os nomes\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Lena Kuphal\");\r",
											"    pm.expect(pm.response.text()).to.include(\"Mr. Drew Stroman\");\r",
											"});\r",
											"\r",
											"//RETORNA EMAIL\r",
											"pm.test(\"Retorna os emails\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Lewis.Parisian70@hotmail.com\");\r",
											"    pm.expect(pm.response.text()).to.include(\"Dolly_Abshire@gmail.com\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "bdef273c-8af5-431f-9599-5832a97d939d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url_gorest}}/users"
							},
							"response": []
						},
						{
							"name": "[CT002]Busca usuario por ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1435d89b-af48-4f48-81a2-e7cfde020f2c",
										"exec": [
											"pm.test(\"Retorna o ID com seus respscitvos dados\", function () {\r",
											"    pm.expect(pm.response.id).to.be.below(\"7937559\");\r",
											"    pm.expect(pm.response.name).to.be.below(\"Leo Wolf\");\r",
											"    pm.expect(pm.response.text).to.be.below(\"Krystel_Fahey@hotmail.com\");\r",
											"    pm.expect(pm.response.status).to.be.below(\"active\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "c19b5704-2e42-496b-a2ac-467da16bc62d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_gorest}}/users?id=7937559",
									"host": [
										"{{url_gorest}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "id",
											"value": "7937559"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT003]Busca usuario por Nome",
							"id": "46e4f0ca-0223-46b3-906a-1d66f07a6322",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_gorest}}/users?name=Leo Wolf",
									"host": [
										"{{url_gorest}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "name",
											"value": "Leo Wolf"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT004]Busca usuario por Genero Masculino",
							"id": "8b0ec0bc-c389-43ab-aa04-4d49017d630a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_gorest}}/users?gender=male",
									"host": [
										"{{url_gorest}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "gender",
											"value": "male"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT005]Busca usuario por Genero Feminino",
							"id": "2c81d52a-a73e-4c2a-a919-4cb7ba76a755",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_gorest}}/users?gender=female",
									"host": [
										"{{url_gorest}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "gender",
											"value": "female"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT006]Busca usuario por Staus ativo",
							"id": "b20e26bd-abb6-4833-9fa6-4444c57fab4d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_gorest}}/users?status=active",
									"host": [
										"{{url_gorest}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "status",
											"value": "active"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT007]Busca usuario por Staus inativo",
							"id": "d5ee8af2-075b-4bef-90ba-5d1d580fbdf5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_gorest}}/users?status=inactive",
									"host": [
										"{{url_gorest}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "status",
											"value": "inactive"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "[CT008]Busca detalhada",
							"id": "45223164-7980-4c41-a112-fd3bf1e3188e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_gorest}}/users?id&name=ag&email=&gender=male&status=inactive",
									"host": [
										"{{url_gorest}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "id",
											"value": null
										},
										{
											"key": "name",
											"value": "ag"
										},
										{
											"key": "email",
											"value": ""
										},
										{
											"key": "gender",
											"value": "male"
										},
										{
											"key": "status",
											"value": "inactive"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "27946ba3-b32a-4c5b-a416-59bb2d33e301",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8c518b12-1563-41f4-864a-10dd0a57276c",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3282a63c-5f71-40da-80a5-5b4b76e71816",
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"//TEMPO DE RESPOSTA\r",
									"pm.test(\"Response time is less than 2seg\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"//STATUS CODE DE SUCESSO\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//STATUS DE CRIADO COM SUCESSO\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									""
								]
							}
						}
					]
				}
			],
			"id": "492a8a43-520d-4e3d-86a0-9ab84aae3596"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "a831c7f2b87821c45cf145180a29af04a2ff3f482c423bd19308d26ebc515863"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4b0a75ba-c34a-4fb4-b2da-3875d925c975",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "21853581-7cb3-4ba7-babf-11b387bf6540",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}